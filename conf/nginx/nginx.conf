worker_processes 1;

user nobody nogroup;
pid /tmp/nginx.pid;
error_log /tmp/nginx.error.log;

events {
    worker_connections 1024;
    accept_mutex off;
}

http {
    include "/etc/nginx/mime.types";
    default_type application/octet-stream;
    sendfile on;

server {
  listen 80;
  server_name example.com www.example.com;
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl;

  server_name nukapi.com www.nukapi.com;

  ssl on;
  ssl_certificate /etc/dehydrated/certs/fullchain.pem;
  ssl_certificate_key /etc/dehydrated/certs/privkey.pem;
  ssl_prefer_server_ciphers On;
  ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;

  root /website;
  index index.html index.htm;

  if (!-f "${request_filename}index.html") {
    rewrite ^/(.*)/$ /$1 permanent;
  }

  if ($request_uri ~* "/index.html") {
    rewrite (?i)^(.*)index\.html$ $1 permanent;
  }

  if ($request_uri ~* ".html") {
    rewrite (?i)^(.*)/(.*)\.html $1/$2 permanent;
  }

  error_page 404 /404.html;

  location / {
    try_files $uri $uri.html $uri/ =404;
    add_header 'Access-Control-Allow-Origin' 'https://www.nukapi.com' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
    # required to be able to read Authorization header in frontend
    #add_header 'Access-Control-Expose-Headers' 'Authorization' always;
  }

  location ^~ /.well-known/acme-challenge {
    alias /var/www/dehydrated;
  }

}
}